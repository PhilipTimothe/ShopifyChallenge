{"version":3,"sources":["components/MainPage.js","App.js","reportWebVitals.js","index.js"],"names":["MainPage","state","pod","startDate","Date","endDate","toggle","show","currentPhoto","e","target","id","newPods","Object","assign","setState","values","renderModal","date","dParsed","getFullYear","getMonth","slice","getDate","Modal","onHide","animation","centered","Header","closeButton","Title","title","Body","style","marginBottom","explanation","borderBottom","start","this","sParsed","end","eParsed","fetch","then","res","json","data","map","photo","reverse","event","index","Row","Col","sm","Card","className","width","height","Img","variant","src","hdurl","paddingBottom","overflow","objectFit","Text","textAlign","Button","onClick","outline","borderStyle","backgroundColor","renderLike","xmlns","fill","viewBox","d","color","fillRule","paddingTop","padding","renderPhotos","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","require","config","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ca7dbc5d.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\n\n\n\nclass MainPage extends Component {\n\n    state = {\n        pod : [],\n        startDate : new Date(),\n        endDate : new Date(),\n        toggle: false,\n        show: false,\n        currentPhoto: [],\n    }\n\n    componentDidMount() {\n        const apiey = 'PG7HPAShBt539mvrcYnAZ0zWukaNzVaLiLfxNPfQ'\n\n        let start = new Date(this.state.startDate);\n        let sParsed = `${start.getFullYear()}-`+(`0${start.getMonth() + 1}`).slice(-2)+`-`+(`0${start.getDate() - 5}`).slice(-2)\n        let end = new Date(this.state.endDate);\n        let eParsed = `${end.getFullYear()}-`+(`0${end.getMonth() + 1}`).slice(-2)+`-`+(`0${end.getDate()}`).slice(-2)\n\n        fetch(`https://api.nasa.gov/planetary/apod?api_key=${apiey}&start_date=${sParsed}&end_date=${eParsed}`)\n            .then((res) => res.json())\n            .then(data => {\n                this.setState({ \n                    pod: data,\n                })\n                this.state.pod.map((photo) => photo['toggle'] = false)\n                this.setState({pod: this.state.pod.reverse()})\n            })\n    }\n\n    // Render data on page\n    renderPhotos() {\n        return (\n            <>\n                {this.state.pod.map((event, index) => \n            <Row key={index}>\n                <Col sm>\n                    <Card key={index} className=\"photocard\" style={{ width: '24rem', height: '26rem'}} >\n                        <Card.Img variant=\"top\" className=\"cardImg\" src={event.hdurl} style={{  paddingBottom: '.80rem', width: '25rem', height: '20rem', overflow: 'hidden', objectFit: 'cover'}}/>\n                        <Card.Body>\n                            \n                            <Card.Text style={{ textAlign: 'center' }}>{event.title}</Card.Text>\n                            <div>\n                                <Row>\n                                <Col style={{ textAlign: 'left' }}>\n                                    <Button variant=\"outline-dark\" id={index} onClick={(e) => this.setState({show: true, currentPhoto: this.state.pod[index]})}>\n                                        Explore\n                                    </Button>\n                                </Col>\n                                <Col style={{ textAlign: 'right' }}>\n                                    <Button variant=\"light\" className=\"heart\" id={index} onClick={(e) => this.toggle(e)} style={{  outline: 'none', borderStyle: 'none', backgroundColor: 'transparent' }}>\n                                        {this.renderLike(event)}\n                                    </Button>\n                                </Col>\n                                </Row>\n                            </div>\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n                )}\n           </>\n        )\n    }\n\n    toggle = e => {\n        let toggle = this.state.pod[e.target.id].toggle \n        let newPods = Object.assign({}, this.state.pod)\n        if (toggle === false) {\n            newPods[e.target.id].toggle = true\n            this.setState({\n                    pod: Object.values(newPods)\n            })\n        }\n        if (toggle === true) {\n            newPods[e.target.id].toggle = false\n            this.setState({\n                    pod: Object.values(newPods)\n            })\n        }\n    }\n\n    renderLike(event) {\n        if (event.toggle === false) {\n            return (\n                <>\n                <svg style={{  width: '1.25rem', height: '1.25rem'}} xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" className=\"bi bi-heart\" viewBox=\"0 0 16 16\" >\n                    <path d=\"m8 2.748-.717-.737C5.6.281 2.514.878 1.4 3.053c-.523 1.023-.641 2.5.314 4.385.92 1.815 2.834 3.989 6.286 6.357 3.452-2.368 5.365-4.542 6.286-6.357.955-1.886.838-3.362.314-4.385C13.486.878 10.4.28 8.717 2.01L8 2.748zM8 15C-7.333 4.868 3.279-3.04 7.824 1.143c.06.055.119.112.176.171a3.12 3.12 0 0 1 .176-.17C12.72-3.042 23.333 4.867 8 15z\"/>\n                </svg>\n                {' '}Like \n                </>\n            )\n        }\n        if (event.toggle === true) {\n            return (\n                <>\n                <svg style={{ color: 'red', width: '1.25rem', height: '1.25rem'}} xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" className=\"bi bi-heart-fill\" viewBox=\"0 0 16 16\">\n                    <path fillRule=\"evenodd\" d=\"M8 1.314C12.438-3.248 23.534 4.735 8 15-7.534 4.736 3.562-3.248 8 1.314z\"/>\n                </svg>\n                {' '}Unlike \n                </>\n            )\n        }\n    }\n\n    renderModal = e => {\n        let date = new Date(this.state.currentPhoto.date);\n        let dParsed = `${date.getFullYear()}-`+(`0${date.getMonth() + 1}`).slice(-2)+`-`+(`0${date.getDate()}`).slice(-2)\n        return (\n            <>\n                <Modal show={this.state.show} onHide={() => this.setState({ show: false })} animation={false} centered>\n                    <Modal.Header closeButton>\n                        <Modal.Title>{this.state.currentPhoto.title}</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <p style={{ marginBottom: '0'}}>{this.state.currentPhoto.explanation}</p>\n                        <br style={{ borderBottom: '1rem'}}/>\n                        <h6>Photo of the day Date:</h6>\n                        <p>{dParsed}</p>\n                    </Modal.Body>\n                </Modal>\n            </>\n        )\n    }\n\n    render() {\n        return (\n            <>\n            <Row>\n            <Col>\n            <div style={{ textAlign: '-webkit-center', paddingTop: '5rem'}}>\n                <div style={{  width: '35%', padding: '2rem', backgroundColor: '#F8F8F8'}}>\n                    <h1>Spacestagram</h1>\n                    {this.renderPhotos()}\n                </div>\n                {this.renderModal()}\n            </div>\n            </Col>\n            </Row>\n            </>\n        );\n    }\n}\n\nexport default MainPage;","// import logo from './logo.svg';\nimport MainPage from './components/MainPage';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\n\nfunction App() {\n  return (\n    <MainPage />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nrequire('dotenv').config()\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}